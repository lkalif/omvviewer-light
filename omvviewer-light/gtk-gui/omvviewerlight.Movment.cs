// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace omvviewerlight {
    
    
    public partial class Movment {
        
        private Gtk.VBox vbox1;
        
        private Gtk.HBox hbox1;
        
        private Gtk.Image image_direction;
        
        private Gtk.SpinButton spinbutton_direction;
        
        private Gtk.HBox hbox2;
        
        private Gtk.Button button1;
        
        private Gtk.Button button_fwd;
        
        private Gtk.Button button3;
        
        protected virtual void Build() {
            Stetic.Gui.Initialize(this);
            // Widget omvviewerlight.Movment
            Stetic.BinContainer.Attach(this);
            this.Name = "omvviewerlight.Movment";
            // Container child omvviewerlight.Movment.Gtk.Container+ContainerChild
            this.vbox1 = new Gtk.VBox();
            this.vbox1.Name = "vbox1";
            this.vbox1.Spacing = 6;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hbox1 = new Gtk.HBox();
            this.hbox1.Name = "hbox1";
            this.hbox1.Spacing = 6;
            // Container child hbox1.Gtk.Box+BoxChild
            this.image_direction = new Gtk.Image();
            this.image_direction.WidthRequest = 100;
            this.image_direction.HeightRequest = 100;
            this.image_direction.Name = "image_direction";
            this.hbox1.Add(this.image_direction);
            Gtk.Box.BoxChild w1 = ((Gtk.Box.BoxChild)(this.hbox1[this.image_direction]));
            w1.Position = 0;
            w1.Expand = false;
            w1.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            this.spinbutton_direction = new Gtk.SpinButton(0, 359, 1);
            this.spinbutton_direction.CanFocus = true;
            this.spinbutton_direction.Name = "spinbutton_direction";
            this.spinbutton_direction.Adjustment.PageIncrement = 10;
            this.spinbutton_direction.ClimbRate = 1;
            this.spinbutton_direction.Numeric = true;
            this.hbox1.Add(this.spinbutton_direction);
            Gtk.Box.BoxChild w2 = ((Gtk.Box.BoxChild)(this.hbox1[this.spinbutton_direction]));
            w2.Position = 1;
            w2.Expand = false;
            w2.Fill = false;
            this.vbox1.Add(this.hbox1);
            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.vbox1[this.hbox1]));
            w3.Position = 0;
            w3.Expand = false;
            w3.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            this.hbox2 = new Gtk.HBox();
            this.hbox2.Name = "hbox2";
            this.hbox2.Spacing = 6;
            // Container child hbox2.Gtk.Box+BoxChild
            this.button1 = new Gtk.Button();
            this.button1.CanFocus = true;
            this.button1.Name = "button1";
            this.button1.UseUnderline = true;
            this.button1.Label = "Left";
            this.hbox2.Add(this.button1);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.hbox2[this.button1]));
            w4.Position = 0;
            w4.Expand = false;
            w4.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.button_fwd = new Gtk.Button();
            this.button_fwd.CanFocus = true;
            this.button_fwd.Name = "button_fwd";
            this.button_fwd.UseUnderline = true;
            this.button_fwd.Label = Mono.Unix.Catalog.GetString("Forward");
            this.hbox2.Add(this.button_fwd);
            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.hbox2[this.button_fwd]));
            w5.Position = 1;
            w5.Expand = false;
            w5.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            this.button3 = new Gtk.Button();
            this.button3.CanFocus = true;
            this.button3.Name = "button3";
            this.button3.UseUnderline = true;
            this.button3.Label = Mono.Unix.Catalog.GetString("Right");
            this.hbox2.Add(this.button3);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(this.hbox2[this.button3]));
            w6.Position = 2;
            w6.Expand = false;
            w6.Fill = false;
            this.vbox1.Add(this.hbox2);
            Gtk.Box.BoxChild w7 = ((Gtk.Box.BoxChild)(this.vbox1[this.hbox2]));
            w7.Position = 1;
            w7.Expand = false;
            w7.Fill = false;
            this.Add(this.vbox1);
            if ((this.Child != null)) {
                this.Child.ShowAll();
            }
            this.Show();
            this.spinbutton_direction.ChangeValue += new Gtk.ChangeValueHandler(this.OnSpinbuttonDirectionChangeValue);
            this.spinbutton_direction.ValueChanged += new System.EventHandler(this.OnSpinbuttonDirectionValueChanged);
            this.button1.Pressed += new System.EventHandler(this.OnButton1Pressed);
            this.button1.Released += new System.EventHandler(this.OnButton1Released);
            this.button_fwd.Pressed += new System.EventHandler(this.OnButtonFwdPressed);
            this.button_fwd.Released += new System.EventHandler(this.OnButtonFwdReleased);
            this.button3.Pressed += new System.EventHandler(this.OnButton2Pressed);
            this.button3.Released += new System.EventHandler(this.OnButton2Released);
        }
    }
}
